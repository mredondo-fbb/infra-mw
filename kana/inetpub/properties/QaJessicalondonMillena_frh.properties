# Form Request Handler Properties File 
# For Kana Forms 6.5
# Example: "frh.properties"

# The FRH can be instructed to use an alternate properties file by
# including a hidden field named "frh.properties" in the form; the
# FRH will take the value and use the properties file named
# "value".  The use of the extension ".properties" is recommended.
#
# For example: 
#    <INPUT TYPE=hidden NAME="frh.properties" VALUE="Form1.properties">
# This will use the properties file "Form1.properties"

# The FRH can be instructed to use a specific confirmation page 
# template by including a hidden field named "frh.template" in the 
# form; the FRH will take the value and use the template file named
# "value" if the ConfirmationPageTemplate property is not set. The 
# use of the extension ".template" is recommended.
#
# For example: 
#    <INPUT TYPE=hidden NAME="frh.template" VALUE="confirm.template">
# This will use the properties file "confirm.template"

# The FRH can be instructed not to send a KXMF message after processing
# the incoming formby including a hidden field named "frh.send" with the
# value "no" (ignoring case) in the form. This has the same effect as 
# setting the property "Send" equal to "no" (ignoring case). Any other
# value besides "no" is ignored.
#
# For example: 
#    <INPUT TYPE=hidden NAME="frh.send" VALUE="no">

# Entries in this file are in the form "Property = Value" and can be
# extended to a second line by appending a "\" (slash) character as
# the last character on the line
#
# Property names are case sensititive

#
# Mailer Properties
#

# SmtpServer:    This is the FQDN (or other valid address) of the
#                SMTP server which will relay KXMF messages to the
#                Kana System
#
#      example:  SmtpServer = mail.kana.com, 192.168.40.12 (Indy Corp.), 63.236.17.224

SmtpServer = 192.168.50.12

# MailToAddress: This is the e-mail address of the POP account which
#                will receive the KXMF messages generated by the FRH
#
#      example:  MailToAddress = support@kana.com
MailToAddress = Jessicalondon@customersupport.redcatsusa.com

# CCToAddress:   This is the (optional) e-mail address of the a POP account 
#                which will receive carbon copies of KXMF messages generated 
#                by the FRH
#
#      example:  CCToAddress = support-archive@kana.com
#
# CCToAddress = 

# Subject:       This is the default subject for KXMF messages 
#                generated by the FRH, and will be used if no Subject
#                field is included on the web form.
#
#         note:  If not specified, the default subject of outgoing KXMF
#                messages will be "Form message via http_referrer"
#
#      example:  Subject = Customer Service Request
#
 Subject = Your JessicaLondon.com Inquiry

# Send:          If this is set to the value "no", the FRH will process
#                an incoming request, but will not send out a KXMF message
#                after processing. Any other value will have no effect.
#
#      example:  Send = no
#
# Send = 

# LogFileName:   If a log file name is provided here, this will enable 
#                message logging, which keeps a list of requests received
#                by the FRH with  date/time, email address, properties file
#                used, and final disposition.  The LogFile will be stored in
#                the log file directory along with the error log 
#                (frh-err.log)
#
#      example:  LogFileName = FRHRequests.log
#
LogFileName = FRHRequests.log

#
# Field Handling Properties
#

# Aliases:       These properties indicate mappings that need to be
#                made between field names on the form and field names
#                within the Kana system in the form "Form Field =>
#                Kana Field". Entries should be separated by commas.
# 
#      example:  Aliases = FormField => Kana Field,\
#                          EmailAddress => Email Address
#
#		Where Kana Field is the name of the custom field defined in 
#		Kana Response and Form Field is the name indicated in the 
#           Form HTML source.

Aliases = 

# Types:         These properties indicate fields that must contain data
#                of a specific type, indicated in the format "Field Name =>
#                Data Type". If the field contains data of the incorrect
#                type, the field will be included in the mismatched list, and
#                the form will fail to validate.
#
#          Note: Validation is performed after field name mapping. For a 
#                complete list of data types, see the Kana Forms Guide.
# 
#      example:  Types  =  CashValue => numeric,\
#                          EmailAddress => string,\
#                          SelectBox => neq(Please Select One)

Types =

# MandatoryFields: Fields indicated in this property must be included and 
#                  non-blank when submitted. If a field is not present or 
#                  is blank, the field will be included in the missing fields
#                  list, and the form will fail to validate.
#
#          Note: Validation is performed after field name mapping. 
# 
#      example:  MandatoryFields = Email Address, Full Name

MandatoryFields = 

# NoEcho:        Field names included in this property will not be
#                included in the Confirmation page returned to the user.
#                They will however, be sent in the message that is
#                viewed by the CSRs.  Entries should be separated by
#                commas (,) and should use the names from the Kana
#                system if aliases are used.
#
#         note:  The NoEcho, Hide, and Ignore properties have no effect
#                on output generated from templates. See the Kana Forms
#                Guide for more detail.
#
#      example:  No Echo = Hidden Field, Form Name

NoEcho = 

# Hide:          Field names included in this property will not be
#                visible in the message sent to the CSR, and will not
#                be included in the Confirmation page returned to the user.
#                They will however, be entered into the Kana Response 
#                system as custom field values. Entries should be 
#                separated by commas (,) and should use the names from 
#                the Kana system if aliases are used.
# 
#         note:  The NoEcho, Hide, and Ignore properties have no effect
#                on output generated from templates. See the Kana Forms
#                Guide for more detail.
#
#      example:  Hide= Tracking ID, System Values

Hide = 

# Ignore:        Field names included in this property will be excluded
#                from the system entirely; they will not be visible to
#                either the user or the CSR, and they will not be entered
#                into custom fields. Entries should be separated by
#                commas (,) and should use the names from the Kana
#                system if aliases are used.
#
#         note:  The NoEcho, Hide, and Ignore properties have no effect
#                on output generated from templates. See the Kana Forms
#                Guide for more detail.
#
#      example:  Ignore = Session Number, Background Color

Ignore = 

# EnvironmentFields: The names of Environment variables to be included
#                in the customer confirmation page or the message to the 
#                CSR. Note that these are included prior to aliasing, and 
#                can be renamed to a friendlier form via that mechanism.
# 
#      example:  EnvironmentFields = HTTP_REFERER, HTTP_USER_AGENT, REMOTE_HOST

EnvironmentFields = 

# CookieFields:  The names of cookies to be included in the customer 
#                confirmation page or the message to the CSR. Note that 
#                these are included prior to aliasing, and can be renamed 
#                to a friendlier form via that mechanism.
# 
#      example:  CookieFields = Session_ID

CookieFields = 

# AttachFields:  The names of fields which may actually be files uploaded from
#                the customer's browser. These fields, if they indicate files,
#                will not be included in the KXMF message, but will instead be
#                included as MIME attachments.             
# 
#      example:  AttachFields = File1, Upload_2

AttachFields = 


#
# Confirmation Page Properties
#

# ConfirmationPageTemplate, ErrorPageTemplate, ValidationFailedTemplate
#                These properties allow you to specify templates to be used 
#                for the customer confirmation page, the customized error
#                page, and for the Validation Failed feedback page. The 
#                template files indicated below must be found in the 
#                properties file directory.
#
# NOTE: This feature is disabled by default; if enabled, templates will
#       override any redirects or autogenerated responses.
#
#      example:  ConfirmationPageTemplate = ConfirmationPage.template
#      example:  ErrorPageTemplate        = Error.template
#      example:  ValidationFailedTemplate = InvalidInput.template
#
# ConfirmationPageTemplate = 
# ErrorPageTemplate = 
# ValidationFailedTemplate =

# ConfirmationPageURL, ErrorPageURL, ValidationFailedURL
#                These properties allow you to send ("redirect") the 
#                user to an existing web page, rather than replying with 
#                a page generated by the FRH. The user is sent to the page
#                at ConfirmationPageURL in the case of a successful submit, 
#                the page at ErrorPageURL in the case of an error, and to 
#                the page at ValidationFailedURL in the case that validation
#                is not successful.
#
# NOTE: This feature is disabled by default; if enabled, ConfirmationPageURL
#       will override any values in the HtmlPagePrologue, HtmlPageFormat, and
#       HtmlPageEpilogue properties. Also, if ConfirmationPageURL and 
#       ConfirmationPageTemplate are both present, the template will be used, not
#       the redirect.
#
#      example:  ConfirmationPageURL = http://your.server/ThanksForComment.html
#      example:  ErrorPageURL = http://your.server/ErrorWithComment.html
#      example:  ValidationFailedURL = http://your.server/ErrorWithComment.html
#
# ConfirmationPageURL = 
# ErrorPageURL = 
# ValidationFailedURL = 
#ConfirmationPageURL = https://63.236.17.238:1444/jessicalondon/kana/contactus_thankyou.asp
ConfirmationPageURL = https://www.jessicalondon.com/jessicalondon/kana/contactus_thankyou.asp

# ConfirmationPageCookies, ErrorPageCookies, ValidationFailedCookies
#                These properties allow you to specify HTTP cookies to be
#                set on the customer's web browser in the case of a success,
#                validation failure, or error. Cookies are in the format
#                     CookieName => domain:expiration:value
#                Please see the manual for more detail. 
#
# NOTE: This feature is disabled by default; if enabled, it will function with
#       any of the three standard output types (autogenerated/standard responses,
#       redirect responses, or template responses.)
#
#      example:  ConfirmationPageCookies = Status => .company.com:+180d:Registered
#
# ConfirmationPageCookies = 
# ErrorPageCookies = 
# ValidationFailedCookies = 


# HtmlPagePrologue, HtmlPageFormat, HtmlPageEpilogue
#                These three properties indicate the format in which
#                form data will be included in the HTML page returned
#                to the user as a confirmation message.
#
# HtmlPagePrologue:  This will be displayed once, at the beginning of
#                    the page.
# HtmlPageFormat:    This will be displayed for each name=value pair,
#                    {0} will be replaced with that name, {1} with
#                    that value
# HtmlPageEpilogue:  This will be displayed once, at the end of the page.
#
#
# examples:
#   HtmlPagePrologue	= <html><head><title>You Submitted</title>\
#                         </head><body>\n<br><h2>You Submitted</h2>\
#                         \n<table>
#   HtmlPageFormat	= <tr><td>{0}: </td><td>{1}</td></tr>\n
#   HtmlPageEpilogue	= </table><br><br><h3>Thank You\
#                         </h3>\n<font size=-1 color="blue">Powered by \
#                         <a href="http://www.kana.com/">Kana Forms</A>\
#                         </font></body></html>\n

HtmlPagePrologue = <html><head><title>You Submitted</title></head>\
<body>\n<br><h3>You Submitted:</h3>\n<table>

HtmlPageFormat   = <tr><td align=right><b>{0}</b>:</td><td>{1}</td></tr>\n
HtmlPageEpilogue = </table><br><h3>Thank You\
</h3>\n<font size="-1">Powered by \
<a href="http://www.kana.com/">Kana</A>.</font></body></html>\n

#
# KXMF Output Properties
#

# MessageHTMLTemplate, MessageTextTemplate
#                These two properties allow you to specify templates to be
#                used for the HTML and text parts of the CSR message. 
#                The template files indicated below must be found in the 
#                properties file directory.
#
# NOTE: This feature is disabled by default; if enabled, these will override
#       the auto-generated CSR message parts.
#
#      example:  MessageHTMLTemplate = Message-HTML.template
#      example:  MessageTextTemplate = Message-text.template
#
# MessageHTMLTemplate = 
# MessageTextTemplate = 

# PlainTextPrologue, PlainTextFormat, PlainTextEpilogue 
#                These three properties indicate the format in which
#                form data will be included in the plain text portion
#                of the KXMF message.
#
# PlainTextPrologue: This will be included once, at the beginning of
#                    the message.
# PlainTextFormat:   This will be included for each name=value pair,
#                    {0} will be replaced with that name, {1} with
#                    that value
# PlainTextEpilogue: This will be included once, at the end of the
#                    message.
#
# examples:
#   PlainTextPrologue	= \nForm Message\n\n
#   PlainTextFormat	= {0}: {1}\n
#   PlainTextEpilogue	= \n

PlainTextPrologue	= \nForm Message\n\n
PlainTextFormat	= {0}: {1}\n
PlainTextEpilogue	= \n

# HtmlTextPrologue, HtmlTextFormat, HtmlTextEpilogue
#                These three properties indicate the format in which
#                form data will be included in the HTML portion of
#                the KXMF message.
#
# HtmlTextPrologue:  This will be included once, at the beginning of
#                     the message.
# HtmlTextFormat:    This will be included for each name=value pair,
#                    {0} will be replaced with that name, {1} with
#                    that value
# HtmlTextEpilogue:  This will be included once, at the end of the
#                    message.
#
# examples:
#   HtmlTextPrologue	= <html><head><title>Form Message</title>
#                         </head><body>\n<br><h2>Form Message</h2>\
#                         \n<table>
#   HtmlTextFormat	= <tr><td> {0}:</td><td> {1} </td></tr>\n
#   HtmlTextEpilogue	= </table>\n</body></html>\n

HtmlTextPrologue = <html><head><title>Form Message</title>\
</head><body>\n<br><h2>Form Message</h2>\n<table>

HtmlTextFormat = <tr><td ALIGN=RIGHT><B>{0}</B>:</td><td> {1} </td></tr>\n
HtmlTextEpilogue = </table>\n</body></html>\n


